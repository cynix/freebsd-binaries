name: Build

on:
  workflow_call:
    inputs:
      container:
        type: string
        required: true
      build:
        type: string
        required: true

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        if: ${{ inputs.build == 'all' || fromJSON(inputs.container).name == inputs.build }}
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          sync: sshfs
          copyback: false

          prepare: |
            sysctl net.inet.ip.forwarding=1

            mkdir -p /usr/local/etc/pkg/repos
            echo 'FreeBSD: { url: "pkg+https://pkg.freebsd.org/${ABI}/latest" }' > /usr/local/etc/pkg/repos/FreeBSD.conf
            pkg install -y podman-suite qemu-user-static
            service qemu_user_static onestart

            sed -i '' -e 's/zfs/vfs/g' /usr/local/etc/containers/storage.conf
            mkdir -p /var/db/containers/storage
            podman login -u ${{ github.actor }} -p ${{ github.token }} ghcr.io

          run: |
            rm -f Containerfile

            NAME=${{ fromJSON(inputs.container).name }}
            BASE=${{ fromJSON(inputs.container).base }}
            : ${BASE=freebsd:minimal}
            PLATFORMS=${{ fromJSON(inputs.container).platforms }}
            : ${PLATFORMS=freebsd/amd64,freebsd/arm64}

            echo "FROM ghcr.io/cynix/$BASE" >> Containerfile
            echo 'RUN pkg install -y ${{ fromJSON(inputs.container).packages }} && pkg clean -a -y && rm -rf /var/db/pkg/repos/*' >> Containerfile
            if [ -n "${{ fromJSON(inputs.container).user }}" ]; then
              echo 'USER ${{ fromJSON(inputs.container).user }}' >> Containerfile
            fi
            echo 'ENTRYPOINT ["${{ fromJSON(inputs.container).entrypoint }}"]' >> Containerfile
            cat Containerfile

            podman build --manifest=ghcr.io/cynix/$NAME:latest --network=host --platform=$PLATFORMS --pull=always .
            podman manifest push ghcr.io/cynix/$NAME:latest
